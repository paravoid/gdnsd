3.3.0 - 2020-09-09
    * New Feature: 'skip_first' flag added for geoip resource definitions.
      This allows defining a backup geoip resource which shares the same map as
      a primary resource, but always resolves to the second-best choice for a
      given client, as if the (dynamic) first choice were down.

3.2.2 - 2020-02-19
    * Bugfix: In the case that a "replace" daemon takeover happened while
      unexpired ephemeral ACME challenge data was present (which is handed
      off to the new replacement daemon), the new daemon could pause for the
      entire value of "acme_challenge_ttl" (default: 10 minutes) during its
      startup sequence.  The takeover/replace process would eventually succeed
      between the two daemons, but the long wait would cause various timeouts
      for control/notification by default (e.g. gdnsdctl won't wait that long
      to report the success).

3.2.1 - 2019-07-19
    * Fix CVE-2019-13951: IPv4 addresses in local zone file data which are
      longer than the maximum legitimate IPv4 address cause a stack buffer
      overflow and crash.
    * Fix CVE-2019-13952: IPv6 addresses in local zone file data which are
      longer than the maximum legitimate IPv6 address cause a stack buffer
      overflow and crash.

3.2.0 - 2019-05-05
    * ACME challenge response TXT RRs are now emitted with a TTL of zero by
      default, which makes things work reliably in some tricky corner cases
      with ACME providers.  This can be overridden via the new config option
      "acme_challenge_dns_ttl".
    * The minimum configurable value for "min_ttl" was reduced from 1 to 0.
    * The "min_ttl" setting now correctly clamps small TTLs for SOA records.
    * All out of zone glue addresses (truly out of zone, not just within a
      local delegation) now generate a warning on zonefile loading (or an error
      if zones_strict_data is in effect).  Support for out of zone glue will
      likely be removed in a future major version bump, as it's basically
      useless and non-recommended in the DNS in general at this point in
      history, and supporting it is needlessly complicated.
    * Minor refactorings, nit-fixes, and docs updates.

3.1.0 - 2019-03-30
    * RFC 8490 "DNS Stateful Operations" (DSO) implemented and enabled by
      default for all TCP listeners.  Can be disabled in case of interop or
      other issues via the new global config option "disable_tcp_dso".
    * Zonefile parsing can now use multiple threads for speed.  There's a new
      config option "zones_rfc1035_threads" (default: 2) to specify how many
      threads to use when parsing zones on start or reload.  You'll have to do
      some testing to find an optimal value for your setup.
    * TCP control sockets: you can now define a limited-functionality TCP
      control socket listener which gdnsdctl can connect to from another
      machine.  See the documentation for the new config option "tcp_control".
    * experimental_no_chain config option: As the name implies, this is for
      experimentation only.  If set to true, gdnsd will never chain through
      zone-local CNAME entries while generating responses, instead emitting
      just a singular CNAME RR.  See the documentation for more details!
    * Some substantial internal refactoring was done for code cleanliness and
      for making runtime queries more CPU/cache-efficient.

3.0.1 - 2019-03-04
    * Bugfixes:
      * The code which validates that loaded zonefile RRs are not oversized for
        implementation limits (~16KB encoded response data per RR Set) was
        having its results thrown away, nullifying the validation.  Now the
        limit is checked properly, and zonefiles containing such data will be
        rejected at load time.
      * Minor fix for UDP error statistics, in a corner case on platforms that
        do not have the recvmmsg()/sendmmsg() syscalls, where sometimes what
        should've incremented the UDP "recvfail" stat instead incremented the
        "dropped" stat.
      * Daemon no longer exits with an error if asked for resource states info
        over the control socket ("gdnsdctl states") when no such states are
        configured at all.
      * Removed redundant and outdated help string for "-i" from gdnsdctl's
        usage output.

3.0.0 - 2019-02-15
    * Note that this is a major version number bump, and for some users and
      configurations this means major compatibility-breaking changes.  Do not
      expect a simple upgrade like a minor version release!  Please see the
      separate file VERSION3.md which offers an overview of all the major
      changes from 2.x; there's too much to succinctly summarize here.
    * Also, all previous NEWS entries were shifted to NEWS.old, so that we can
      start this file over and leave previous 2146 lines of updates behind.
    * For beta users: there were no functional changes since the final
      2.99.9950-beta release, only QA/refactoring work and a couple of
      FreeBSD-specific fixups to the TCP parts of the testsuite.
